[?1049h[>4;2m[?1h=[?2004h[?1004h[1;22r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[22;1H"~/Documents/GitHub/observatory-ops-docs/.git/rebase-merge/git-rebase-todo" 32L, 1485B[1;1Hnoop

# Rebase be4d319..be4d319 onto be4d319 (1 command)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup [-C | -c] <commit> = like "squash" but keep only the previous
#[20Ccommit's log message, unless -C is used, in which case
#[20Ckeep only this commit's message; -c is same as -C but
#[20Copens the editor
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
#[9Ccreate a merge commit using the original merge commit's
#[9Cmessage (or the oneline, if no original merge commit was[1;1H[?25h[?4m[22;1H[?2004l[>4;m[23;2t[23;1t[22;1H[K[22;1H[?1004l[?2004l[?1l>[?1049l[>4;m